/**
 * FT81x on ST7701S Arduino Driver
 *
 * MIT License
 *
 * Copyright (c) 2020 Raphael St√§bler
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 **/

#include "FT81x.h"

typedef struct {
    int16_t x;
    int16_t y;
    int16_t z;
} vertex;

#define FOV        150
#define HALF_FRAME 240
#define ZOOM       2

#if defined(ESP32)
FT81x ft81x = FT81x(5, 17, 16);  // NodeMCU-32 pin configuration
#else
FT81x ft81x = FT81x(10, 9, 8);  // Arduino default pin configuration
#endif

#if defined(__AVR__)
vertex fetchVertexFromProgmem(uint16_t i);
#define VERTEX(i) (fetchVertexFromProgmem(i))
#else
#define VERTEX(i) (mesh[i])
#endif

#define NUM_VERTICES 1098
const vertex mesh[] PROGMEM = {{-68, -35, 110}, {-69, -35, 113}, {-51, -35, 121}, {-65, -22, 114}, {-51, -17, 117}, {-51, -35, 121}, {-38, -22, 119}, {-33, -35, 119}, {-51, -35, 121}, {-38, -49, 119}, {-51, -54, 117}, {-51, -35, 121}, {-65, -49, 114}, {-51, -54, 117}, {-51, -52, 114}, {-51, -66, 105}, {-73, -57, 100}, {-79, -63, 84}, {-91, -35, 82}, {-79, -63, 84}, {-51, -75, 90}, {-22, -63, 94}, {-51, -75, 90}, {-51, -66, 105}, {-29, -57, 108}, {-40, -47, 116}, {-38, -49, 119}, {-33, -35, 119}, {-35, -35, 116}, {-20, -35, 108}, {-29, -57, 108}, {-22, -63, 94}, {-11, -35, 95}, {-22, -8, 94}, {-11, -35, 95}, {-20, -35, 108}, {-29, -13, 108}, {-40, -23, 116}, {-38, -22, 119}, {-51, -17, 117}, {-51, -19, 114}, {-51, -4, 105}, {-29, -13, 108}, {-22, -8, 94}, {-51, 3, 90}, {-79, -8, 84}, {-51, 3, 90}, {-51, -4, 105}, {-73, -13, 100}, {-79, -8, 84}, {-91, -35, 82}, {-82, -35, 98}, {-73, -57, 100}, {-63, -47, 111}, {-65, -49, 114}, {-69, -35, 113}, {-65, -22, 114}, {-63, -23, 111}, {63, -23, 111}, {0, -62, 108}, {0, -51, 119}, {18, -44, 111}, {26, -43, 114}, {28, -43, 110}, {28, -33, 109}, {29, -25, 109}, {35, -18, 110}, {54, -12, 106}, {67, -17, 102}, {79, -30, 98}, {81, -41, 98}, {77, -49, 99}, {60, -57, 109}, {49, -59, 109}, {41, -58, 111}, {34, -52, 110}, {28, -43, 110}, {26, -43, 114}, {30, -54, 114}, {34, -52, 110}, {41, -58, 111}, {40, -61, 113}, {49, -62, 110}, {49, -59, 109}, {60, -57, 109}, {61, -58, 113}, {49, -62, 110}, {47, -69, 108}, {62, -63, 105}, {61, -58, 113}, {82, -51, 101}, {77, -49, 99}, {81, -41, 98}, {85, -42, 100}, {82, -51, 101}, {87, -54, 97}, {93, -43, 94}, {85, -42, 100}, {84, -28, 99}, {79, -30, 98}, {67, -17, 102}, {69, -14, 105}, {84, -28, 99}, {91, -27, 94}, {72, -9, 98}, {69, -14, 105}, {54, -9, 108}, {54, -12, 106}, {35, -18, 110}, {33, -15, 114}, {27, -22, 113}, {29, -25, 109}, {28, -33, 109}, {25, -31, 114}, {26, -43, 114}, {18, -44, 111}, {19, -30, 110}, {25, -31, 114}, {27, -22, 113}, {23, -20, 109}, {19, -30, 110}, {0, -30, 111}, {-19, -30, 110}, {-25, -31, 114}, {-28, -33, 109}, {-29, -25, 109}, {-35, -18, 110}, {-54, -12, 106}, {-35, -18, 110}, {-33, -15, 114}, {-27, -22, 113}, {-29, -25, 109}, {-28, -33, 109}, {-28, -43, 110}, {-26, -43, 114}, {-28, -43, 110}, {-34, -52, 110}, {-41, -58, 111}, {-49, -59, 109}, {-60, -57, 109}, {-49, -59, 109}, {-49, -62, 110}, {-61, -58, 113}, {-60, -57, 109}, {-77, -49, 99}, {-81, -41, 98}, {-77, -49, 99}, {-82, -51, 101}, {-85, -42, 100}, {-81, -41, 98}, {-79, -30, 98}, {-67, -17, 102}, {-79, -30, 98}, {-84, -28, 99}, {-69, -14, 105}, {-67, -17, 102}, {-54, -12, 106}, {-54, -9, 108}, {-69, -14, 105}, {-72, -9, 98}, {-91, -27, 94}, {-84, -28, 99}, {-85, -42, 100}, {-93, -43, 94}, {-87, -54, 97}, {-82, -51, 101}, {-61, -58, 113}, {-62, -63, 105}, {-47, -69, 108}, {-49, -62, 110}, {-40, -61, 113}, {-41, -58, 111}, {-34, -52, 110}, {-30, -54, 114}, {-26, -43, 114}, {-18, -44, 111}, {-26, -43, 114}, {-25, -31, 114}, {-27, -22, 113}, {-23, -20, 109}, {-19, -30, 110}, {-18, -44, 111}, {0, -51, 119}, {18, -44, 111}, {23, -60, 113}, {30, -54, 114}, {40, -61, 113}, {36, -68, 110}, {23, -60, 113}, {14, -62, 123}, {0, -51, 119}, {-18, -44, 111}, {-23, -60, 113}, {-30, -54, 114}, {-40, -61, 113}, {-36, -68, 110}, {-23, -60, 113}, {-14, -62, 123}, {0, -51, 119}, {0, -30, 111}, {0, -6, 106}, {0, 20, 108}, {0, 28, 109}, {0, 27, 116}, {5, 18, 114}, {6, 21, 118}, {13, 22, 118}, {15, 33, 121}, {0, 29, 121}, {-15, 33, 121}, {-13, 22, 118}, {-6, 21, 118}, {0, 29, 121}, {6, 21, 118}, {13, 22, 118}, {15, 19, 114}, {5, 18, 114}, {0, 20, 108}, {-5, 18, 114}, {-6, 21, 118}, {-13, 22, 118}, {-15, 19, 114}, {-5, 18, 114}, {0, 27, 116}, {0, 29, 121}, {0, 42, 117}, {11, 36, 117}, {13, 40, 114}, {11, 36, 117}, {15, 33, 121}, {19, 33, 116}, {15, 19, 114}, {14, 21, 108}, {0, 20, 108}, {-14, 21, 108}, {-15, 19, 114}, {-19, 33, 116}, {-15, 33, 121}, {-11, 36, 117}, {-13, 40, 114}, {-11, 36, 117}, {0, 42, 117}, {0, 46, 114}, {13, 40, 114}, {19, 33, 116}, {18, 33, 109}, {23, 35, 104}, {26, 45, 104}, {12, 42, 108}, {13, 40, 114}, {12, 42, 108}, {18, 33, 109}, {14, 21, 108}, {18, 14, 118}, {0, -6, 106}, {23, -20, 109}, {29, -13, 108}, {33, -15, 114}, {54, -9, 108}, {54, -2, 102}, {29, -13, 108}, {18, 14, 118}, {23, 35, 104}, {34, 36, 81}, {30, 33, 68}, {31, 41, 62}, {30, 57, 23}, {59, 25, 21}, {62, 28, -30}, {70, -3, -79}, {93, 1, -62}, {115, 18, -47}, {125, -55, -55}, {149, -63, -70}, {182, -68, -79}, {200, -43, -73}, {197, -46, -61}, {185, -42, -59}, {180, -36, -65}, {183, -35, -72}, {162, -30, -57}, {158, -40, -57}, {148, -34, -54}, {154, -27, -55}, {162, -30, -57}, {183, -35, -72}, {173, -50, -70}, {158, -40, -57}, {151, -47, -60}, {139, -42, -50}, {148, -34, -54}, {140, -25, -51}, {146, -18, -53}, {154, -27, -55}, {177, -12, -70}, {153, 0, -61}, {146, -18, -53}, {137, -9, -49}, {129, 2, -38}, {118, 2, -46}, {118, 2, -40}, {118, 2, -46}, {124, -2, -46}, {137, -9, -49}, {130, -15, -47}, {121, -11, -46}, {111, -13, -46}, {110, -13, -40}, {119, -12, -40}, {121, -11, -46}, {124, -2, -46}, {123, -2, -40}, {119, -12, -40}, {110, -13, -40}, {111, -13, -46}, {123, -25, -46}, {130, -15, -47}, {140, -25, -51}, {130, -34, -46}, {123, -25, -46}, {122, -25, -40}, {116, -29, -30}, {105, -5, -27}, {123, -2, -40}, {118, 2, -40}, {105, 3, -25}, {105, -5, -27}, {106, 0, -10}, {105, 3, -25}, {118, 2, -40}, {129, 3, -30}, {129, 2, -38}, {153, 0, -61}, {151, 0, -53}, {129, 3, -30}, {121, 10, -19}, {105, 3, -25}, {105, -5, -27}, {110, -13, -40}, {122, -25, -40}, {130, -35, -38}, {130, -34, -46}, {139, -42, -50}, {138, -44, -42}, {130, -35, -38}, {123, -42, -30}, {134, -52, -31}, {138, -44, -42}, {149, -50, -52}, {151, -47, -60}, {173, -50, -70}, {171, -52, -63}, {180, -36, -65}, {183, -35, -72}, {177, -12, -70}, {173, -13, -65}, {180, -36, -65}, {185, -42, -59}, {197, -46, -61}, {200, -43, -73}, {191, -8, -77}, {151, 12, -72}, {115, 18, -47}, {113, 20, -18}, {121, 10, -19}, {150, 5, -44}, {151, 0, -53}, {173, -13, -65}, {177, -11, -59}, {187, -8, -62}, {191, -8, -77}, {182, -68, -79}, {180, -74, -61}, {173, -63, -57}, {171, -52, -63}, {149, -50, -52}, {148, -60, -42}, {173, -63, -57}, {185, -42, -59}, {177, -11, -59}, {150, 5, -44}, {151, 14, -47}, {151, 12, -72}, {149, -63, -70}, {149, -69, -45}, {180, -74, -61}, {197, -46, -61}, {187, -8, -62}, {151, 14, -47}, {113, 20, -18}, {86, 18, -23}, {105, 3, -25}, {86, 18, -23}, {62, 28, -30}, {86, 18, -23}, {93, 1, -62}, {113, -38, -63}, {125, -55, -55}, {130, -59, -34}, {149, -69, -45}, {148, -60, -42}, {134, -52, -31}, {130, -59, -34}, {119, -47, -29}, {123, -42, -30}, {116, -29, -30}, {125, -46, -6}, {119, -47, -29}, {125, -46, -6}, {106, 0, -10}, {107, 6, 10}, {86, 18, -23}, {107, 6, 10}, {59, 25, 21}, {62, 28, -30}, {43, 45, -38}, {62, 28, -30}, {70, -3, -79}, {90, -47, -85}, {113, -38, -63}, {116, -78, -52}, {113, -38, -63}, {119, -47, -29}, {116, -90, -17}, {116, -78, -52}, {93, -99, -65}, {93, -109, -28}, {116, -90, -17}, {116, -82, 18}, {93, -102, 8}, {93, -109, -28}, {66, -136, -10}, {66, -126, -55}, {93, -99, -65}, {90, -47, -85}, {67, -63, -102}, {66, -126, -55}, {0, -131, -79}, {-66, -126, -55}, {-93, -99, -65}, {-116, -78, -52}, {-113, -38, -63}, {-125, -55, -55}, {-149, -63, -70}, {-182, -68, -79}, {-200, -43, -73}, {-197, -46, -61}, {-185, -42, -59}, {-180, -36, -65}, {-183, -35, -72}, {-162, -30, -57}, {-158, -40, -57}, {-148, -34, -54}, {-154, -27, -55}, {-162, -30, -57}, {-183, -35, -72}, {-173, -50, -70}, {-158, -40, -57}, {-151, -47, -60}, {-139, -42, -50}, {-148, -34, -54}, {-140, -25, -51}, {-146, -18, -53}, {-154, -27, -55}, {-177, -12, -70}, {-153, 0, -61}, {-146, -18, -53}, {-137, -9, -49}, {-129, 2, -38}, {-118, 2, -46}, {-118, 2, -40}, {-118, 2, -46}, {-124, -2, -46}, {-137, -9, -49}, {-130, -15, -47}, {-121, -11, -46}, {-111, -13, -46}, {-110, -13, -40}, {-119, -12, -40}, {-121, -11, -46}, {-124, -2, -46}, {-123, -2, -40}, {-119, -12, -40}, {-110, -13, -40}, {-111, -13, -46}, {-123, -25, -46}, {-130, -15, -47}, {-140, -25, -51}, {-130, -34, -46}, {-123, -25, -46}, {-122, -25, -40}, {-116, -29, -30}, {-105, -5, -27}, {-123, -2, -40}, {-118, 2, -40}, {-105, 3, -25}, {-105, -5, -27}, {-106, 0, -10}, {-105, 3, -25}, {-118, 2, -40}, {-129, 3, -30}, {-129, 2, -38}, {-153, 0, -61}, {-151, 0, -53}, {-129, 3, -30}, {-121, 10, -19}, {-105, 3, -25}, {-105, -5, -27}, {-110, -13, -40}, {-122, -25, -40}, {-130, -35, -38}, {-130, -34, -46}, {-139, -42, -50}, {-138, -44, -42}, {-130, -35, -38}, {-123, -42, -30}, {-134, -52, -31}, {-138, -44, -42}, {-149, -50, -52}, {-151, -47, -60}, {-173, -50, -70}, {-171, -52, -63}, {-180, -36, -65}, {-183, -35, -72}, {-177, -12, -70}, {-173, -13, -65}, {-180, -36, -65}, {-185, -42, -59}, {-197, -46, -61}, {-200, -43, -73}, {-191, -8, -77}, {-151, 12, -72}, {-115, 18, -47}, {-113, 20, -18}, {-121, 10, -19}, {-150, 5, -44}, {-151, 0, -53}, {-173, -13, -65}, {-177, -11, -59}, {-187, -8, -62}, {-191, -8, -77}, {-182, -68, -79}, {-180, -74, -61}, {-173, -63, -57}, {-171, -52, -63}, {-149, -50, -52}, {-148, -60, -42}, {-173, -63, -57}, {-185, -42, -59}, {-177, -11, -59}, {-150, 5, -44}, {-151, 14, -47}, {-151, 12, -72}, {-149, -63, -70}, {-149, -69, -45}, {-180, -74, -61}, {-197, -46, -61}, {-187, -8, -62}, {-151, 14, -47}, {-113, 20, -18}, {-86, 18, -23}, {-105, 3, -25}, {-86, 18, -23}, {-93, 1, -62}, {-115, 18, -47}, {-125, -55, -55}, {-130, -59, -34}, {-134, -52, -31}, {-148, -60, -42}, {-149, -69, -45}, {-130, -59, -34}, {-119, -47, -29}, {-123, -42, -30}, {-116, -29, -30}, {-125, -46, -6}, {-119, -47, -29}, {-113, -38, -63}, {-93, 1, -62}, {-70, -3, -79}, {-62, 28, -30}, {-86, 18, -23}, {-62, 28, -30}, {-59, 25, 21}, {-62, 28, -30}, {-43, 45, -38}, {-62, 28, -30}, {-70, -3, -79}, {-90, -47, -85}, {-113, -38, -63}, {-116, -78, -52}, {-116, -90, -17}, {-93, -109, -28}, {-93, -99, -65}, {-90, -47, -85}, {-67, -63, -102}, {-66, -126, -55}, {-66, -136, -10}, {-93, -109, -28}, {-93, -102, 8}, {-116, -82, 18}, {-116, -90, -17}, {-119, -47, -29}, {-125, -46, -6}, {-106, 0, -10}, {-107, 6, 10}, {-86, 18, -23}, {-107, 6, 10}, {-59, 25, 21}, {-30, 57, 23}, {-31, 41, 62}, {-59, 25, 21}, {-63, 13, 68}, {-30, 33, 68}, {-31, 41, 62}, {-30, 57, 23}, {0, 67, 27}, {30, 57, 23}, {31, 41, 62}, {59, 25, 21}, {63, 13, 68}, {30, 33, 68}, {29, 25, 73}, {63, 13, 68}, {29, 25, 73}, {29, 27, 82}, {34, 36, 81}, {37, 45, 81}, {31, 41, 62}, {34, 51, 59}, {36, 73, 57}, {42, 104, 55}, {47, 133, 58}, {23, 138, 63}, {0, 142, 67}, {23, 138, 63}, {47, 133, 58}, {47, 138, 76}, {34, 133, 92}, {17, 122, 104}, {13, 119, 104}, {13, 118, 93}, {6, 124, 92}, {13, 118, 93}, {13, 109, 97}, {0, 114, 95}, {0, 125, 92}, {6, 124, 92}, {13, 109, 97}, {13, 108, 106}, {0, 113, 105}, {0, 114, 95}, {-13, 109, 97}, {-13, 118, 93}, {-6, 124, 92}, {0, 125, 92}, {6, 124, 92}, {6, 126, 100}, {0, 127, 100}, {0, 125, 92}, {-6, 124, 92}, {-13, 118, 93}, {-13, 119, 104}, {-6, 126, 100}, {-6, 124, 92}, {-13, 109, 97}, {-13, 108, 106}, {0, 113, 105}, {0, 111, 107}, {15, 105, 107}, {13, 108, 106}, {13, 119, 104}, {6, 126, 100}, {9, 129, 101}, {17, 122, 104}, {15, 105, 107}, {0, 111, 107}, {-15, 105, 107}, {0, 111, 107}, {0, 99, 107}, {0, 65, 109}, {0, 47, 108}, {0, 46, 114}, {-13, 40, 114}, {-19, 33, 116}, {-18, 33, 109}, {-23, 35, 104}, {-26, 45, 104}, {-12, 42, 108}, {-13, 40, 114}, {-12, 42, 108}, {0, 47, 108}, {12, 42, 108}, {11, 65, 109}, {0, 65, 109}, {-11, 65, 109}, {-12, 42, 108}, {-18, 33, 109}, {-14, 21, 108}, {-18, 14, 118}, {0, -6, 106}, {-23, -20, 109}, {-29, -13, 108}, {-33, -15, 114}, {-54, -9, 108}, {-54, -2, 102}, {-29, -13, 108}, {-18, 14, 118}, {-23, 35, 104}, {-34, 36, 81}, {-30, 33, 68}, {-29, 25, 73}, {-63, 13, 68}, {-29, 25, 73}, {-29, 27, 82}, {-34, 36, 81}, {-37, 45, 81}, {-31, 41, 62}, {-34, 51, 59}, {-36, 73, 57}, {-42, 104, 55}, {-20, 110, 53}, {0, 117, 50}, {20, 110, 53}, {42, 104, 55}, {53, 130, 77}, {38, 119, 97}, {15, 105, 107}, {17, 100, 107}, {11, 65, 109}, {30, 65, 104}, {26, 45, 104}, {37, 45, 81}, {45, 63, 83}, {30, 65, 104}, {36, 102, 100}, {17, 100, 107}, {0, 99, 107}, {-17, 100, 107}, {-11, 65, 109}, {-30, 65, 104}, {-26, 45, 104}, {-37, 45, 81}, {-45, 63, 83}, {-30, 65, 104}, {-36, 102, 100}, {-17, 100, 107}, {-15, 105, 107}, {-13, 108, 106}, {-13, 119, 104}, {-17, 122, 104}, {-15, 105, 107}, {-38, 119, 97}, {-53, 130, 77}, {-42, 104, 55}, {-47, 133, 58}, {-23, 138, 63}, {0, 142, 67}, {-23, 138, 63}, {-47, 133, 58}, {-47, 138, 76}, {-34, 133, 92}, {-17, 122, 104}, {-9, 129, 101}, {-6, 126, 100}, {0, 127, 100}, {0, 130, 100}, {9, 129, 101}, {23, 136, 92}, {34, 133, 92}, {38, 119, 97}, {36, 102, 100}, {51, 101, 83}, {36, 73, 57}, {18, 78, 52}, {20, 110, 53}, {23, 138, 63}, {26, 141, 81}, {47, 138, 76}, {53, 130, 77}, {51, 101, 83}, {45, 63, 83}, {34, 51, 59}, {26, 60, 37}, {30, 57, 23}, {43, 45, -38}, {0, 55, -51}, {0, 67, 27}, {0, 70, 41}, {26, 60, 37}, {18, 78, 52}, {0, 83, 46}, {0, 117, 50}, {0, 142, 67}, {0, 143, 84}, {26, 141, 81}, {23, 136, 92}, {0, 138, 93}, {0, 130, 100}, {-9, 129, 101}, {-23, 136, 92}, {-34, 133, 92}, {-38, 119, 97}, {-36, 102, 100}, {-51, 101, 83}, {-36, 73, 57}, {-18, 78, 52}, {-20, 110, 53}, {-23, 138, 63}, {-26, 141, 81}, {0, 143, 84}, {0, 138, 93}, {-23, 136, 92}, {-26, 141, 81}, {-47, 138, 76}, {-53, 130, 77}, {-51, 101, 83}, {-45, 63, 83}, {-34, 51, 59}, {-26, 60, 37}, {-18, 78, 52}, {0, 83, 46}, {0, 70, 41}, {-26, 60, 37}, {-30, 57, 23}, {-43, 45, -38}, {0, 55, -51}, {43, 45, -38}, {50, 21, -78}, {70, -3, -79}, {49, -8, -97}, {67, -63, -102}, {0, -82, -124}, {-67, -63, -102}, {-49, -8, -97}, {-70, -3, -79}, {-50, 21, -78}, {-43, 45, -38}, {0, 55, -51}, {0, 28, -98}, {50, 21, -78}, {49, -8, -97}, {0, -10, -121}, {0, 28, -98}, {-50, 21, -78}, {-49, -8, -97}, {0, -10, -121}, {0, -82, -124}, {0, -131, -79}, {0, -143, -11}, {66, -136, -10}, {66, -124, 34}, {93, -102, 8}, {92, -66, 41}, {106, -59, 49}, {116, -82, 18}, {125, -46, -6}, {124, -34, 8}, {107, 6, 10}, {87, 0, 60}, {113, -23, 54}, {124, -34, 8}, {106, -59, 49}, {116, -59, 67}, {99, -66, 72}, {92, -66, 41}, {67, -76, 62}, {0, -83, 83}, {0, -131, 42}, {66, -124, 34}, {67, -76, 62}, {70, -81, 81}, {15, -67, 89}, {70, -81, 81}, {49, -100, 86}, {28, -97, 90}, {15, -67, 89}, {0, -83, 83}, {-67, -76, 62}, {-92, -66, 41}, {-106, -59, 49}, {-116, -82, 18}, {-125, -46, -6}, {-124, -34, 8}, {-107, 6, 10}, {-87, 0, 60}, {-113, -23, 54}, {-124, -34, 8}, {-106, -59, 49}, {-116, -59, 67}, {-99, -66, 72}, {-92, -66, 41}, {-93, -102, 8}, {-66, -124, 34}, {-66, -136, -10}, {0, -143, -11}, {0, -131, 42}, {-66, -124, 34}, {-67, -76, 62}, {-70, -81, 81}, {-15, -67, 89}, {-70, -81, 81}, {-49, -100, 86}, {-28, -97, 90}, {-15, -67, 89}, {0, -83, 83}, {0, -59, 87}, {15, -67, 89}, {9, -72, 109}, {14, -62, 123}, {29, -90, 124}, {36, -68, 110}, {47, -69, 108}, {45, -93, 122}, {29, -90, 124}, {22, -105, 110}, {28, -97, 90}, {49, -100, 86}, {46, -110, 107}, {45, -93, 122}, {63, -79, 116}, {62, -63, 105}, {87, -54, 97}, {100, -60, 106}, {63, -79, 116}, {72, -87, 100}, {70, -81, 81}, {99, -66, 72}, {104, -70, 91}, {100, -60, 106}, {108, -54, 95}, {93, -43, 94}, {91, -27, 94}, {106, -29, 87}, {108, -54, 95}, {125, -62, 86}, {116, -59, 67}, {113, -23, 54}, {121, -21, 65}, {106, -29, 87}, {90, -8, 91}, {72, -9, 98}, {54, -2, 102}, {58, 6, 98}, {90, -8, 91}, {92, 5, 78}, {87, 0, 60}, {63, 13, 68}, {63, 20, 77}, {29, 27, 82}, {18, 14, 118}, {58, 6, 98}, {63, 20, 77}, {92, 5, 78}, {121, -21, 65}, {125, -62, 86}, {104, -70, 91}, {72, -87, 100}, {46, -110, 107}, {22, -105, 110}, {9, -72, 109}, {0, -62, 108}, {0, -59, 87}, {-15, -67, 89}, {-9, -72, 109}, {-14, -62, 123}, {-29, -90, 124}, {-36, -68, 110}, {-47, -69, 108}, {-45, -93, 122}, {-29, -90, 124}, {-22, -105, 110}, {-28, -97, 90}, {-49, -100, 86}, {-46, -110, 107}, {-45, -93, 122}, {-63, -79, 116}, {-62, -63, 105}, {-87, -54, 97}, {-100, -60, 106}, {-63, -79, 116}, {-72, -87, 100}, {-70, -81, 81}, {-99, -66, 72}, {-104, -70, 91}, {-100, -60, 106}, {-108, -54, 95}, {-93, -43, 94}, {-91, -27, 94}, {-106, -29, 87}, {-108, -54, 95}, {-125, -62, 86}, {-116, -59, 67}, {-113, -23, 54}, {-121, -21, 65}, {-106, -29, 87}, {-90, -8, 91}, {-72, -9, 98}, {-54, -2, 102}, {-58, 6, 98}, {-90, -8, 91}, {-92, 5, 78}, {-87, 0, 60}, {-63, 13, 68}, {-63, 20, 77}, {-58, 6, 98}, {-18, 14, 118}, {-29, 27, 82}, {-63, 20, 77}, {-92, 5, 78}, {-121, -21, 65}, {-125, -62, 86}, {-104, -70, 91}, {-72, -87, 100}, {-46, -110, 107}, {-22, -105, 110}, {-9, -72, 109}, {0, -62, 108}, {63, -23, 111}, {65, -22, 114}, {51, -35, 121}, {38, -22, 119}, {33, -35, 119}, {51, -35, 121}, {38, -49, 119}, {51, -54, 117}, {51, -35, 121}, {51, -17, 117}, {65, -22, 114}, {69, -35, 113}, {51, -35, 121}, {65, -49, 114}, {51, -54, 117}, {51, -52, 114}, {63, -47, 111}, {65, -49, 114}, {69, -35, 113}, {68, -35, 110}, {63, -47, 111}, {73, -57, 100}, {79, -63, 84}, {91, -35, 82}, {79, -63, 84}, {51, -75, 90}, {22, -63, 94}, {51, -75, 90}, {51, -66, 105}, {51, -52, 114}, {40, -47, 116}, {38, -49, 119}, {33, -35, 119}, {35, -35, 116}, {40, -47, 116}, {29, -57, 108}, {22, -63, 94}, {11, -35, 95}, {22, -8, 94}, {11, -35, 95}, {20, -35, 108}, {35, -35, 116}, {40, -23, 116}, {38, -22, 119}, {51, -17, 117}, {51, -19, 114}, {40, -23, 116}, {29, -13, 108}, {22, -8, 94}, {51, 3, 90}, {79, -8, 84}, {51, 3, 90}, {51, -4, 105}, {29, -13, 108}, {20, -35, 108}, {29, -57, 108}, {51, -66, 105}, {73, -57, 100}, {82, -35, 98}, {91, -35, 82}, {79, -8, 84}, {73, -13, 100}, {51, -4, 105}, {51, -19, 114}, {63, -23, 111}, {68, -35, 110}, {82, -35, 98}, {73, -13, 100}, {63, -23, 111}, {-63, -23, 111}, {-51, -19, 114}, {-40, -23, 116}, {-35, -35, 116}, {-40, -47, 116}, {-51, -52, 114}, {-63, -47, 111}, {-68, -35, 110}, {-82, -35, 98}, {-73, -13, 100}, {-63, -23, 111}, {-68, -35, 110}};

const int16_t lut[] = {16384, 16381, 16374, 16361, 16344, 16321, 16294, 16261, 16224, 16182, 16135, 16082, 16025, 15964, 15897, 15825, 15749, 15668, 15582, 15491, 15395, 15295, 15190, 15081, 14967, 14848, 14725, 14598, 14466, 14329, 14188, 14043, 13894, 13740, 13582, 13420, 13254, 13084, 12910, 12732, 12550, 12365, 12175, 11982, 11785, 11585, 11381, 11173, 10963, 10748, 10531, 10310, 10086, 9860, 9630, 9397, 9161, 8923, 8682, 8438, 8191, 7943, 7691, 7438, 7182, 6924, 6663, 6401, 6137, 5871, 5603, 5334, 5062, 4790, 4516, 4240, 3963, 3685, 3406, 3126, 2845, 2563, 2280, 1996, 1712, 1427, 1142, 857, 571, 285, 0};

int16_t sin_lut(uint16_t angle);
int16_t cos_lut(uint16_t angle);
vertex rotate(const vertex v, const uint16_t degrees);

static char vertice_text_buffer[16];
static char fps_text_buffer[8];

void setup() {
    SPI.begin();
    ft81x.begin();

    ft81x.setRotation(FT81x_ROTATE_LANDSCAPE);

    ft81x.beginDisplayList();
    ft81x.clear(FT81x_COLOR_RGB(0, 0, 0));
    ft81x.swapScreen();

    sprintf(vertice_text_buffer, "%d vertices", NUM_VERTICES);
}

void loop() {
    static uint16_t rotation = 0;
    static uint64_t time = 0;

    ft81x.beginDisplayList();
    ft81x.clear(FT81x_COLOR_RGB(0, 0, 0));
    ft81x.beginLineStrip(1, FT81x_COLOR_RGB(0, 255, 150));

    for (uint16_t i = 0; i < NUM_VERTICES; i++) {
        const vertex v = rotate(VERTEX(i), rotation);
        const int16_t x = ZOOM * ((FOV * v.x) / (FOV + v.z + 200) + HALF_FRAME / ZOOM);
        const int16_t y = ZOOM * ((FOV * v.y) / (FOV + v.z + 200) + HALF_FRAME / ZOOM);

        ft81x.addVertex(x, y);

        if (i == 1000) {
            ft81x.endLineStrip();
            ft81x.waitForCommandBuffer();
            ft81x.beginLineStrip(1, FT81x_COLOR_RGB(0, 255, 150));
            ft81x.addVertex(x, y);
        }
    }

    ft81x.endLineStrip();

    const uint64_t uptime = millis();
    sprintf(fps_text_buffer, "%d fps", (uint8_t)(1000 / (uptime - time)));

    ft81x.drawText(10, 460, 16, FT81x_COLOR_RGB(255, 0, 255), 0, vertice_text_buffer);
    ft81x.drawText(470, 460, 16, FT81x_COLOR_RGB(255, 0, 255), FT81x_OPT_RIGHTX, fps_text_buffer);

    ft81x.swapScreen();
    rotation = (uptime / 10) % 360;
    time = uptime;
}

vertex rotate(const vertex v, const uint16_t angle) {
    return {(int16_t)(((int32_t)v.x * cos_lut(angle) + (int32_t)v.z * sin_lut(angle)) >> 14), v.y, (int16_t)(((int32_t)v.z * (int32_t)cos_lut(angle) - (int32_t)v.x * (int32_t)sin_lut(angle)) >> 14)};
}

int16_t sin_lut(uint16_t angle) {
    angle += 90;
    if (angle > 450) return lut[0];
    if (angle > 360 && angle < 451) return -lut[angle - 360];
    if (angle > 270 && angle < 361) return -lut[360 - angle];
    if (angle > 180 && angle < 271) return lut[angle - 180];
    return lut[180 - angle];
}

int16_t cos_lut(uint16_t angle) {
    if (angle > 360) return lut[0];
    if (angle > 270 && angle < 361) return lut[360 - angle];
    if (angle > 180 && angle < 271) return -lut[angle - 180];
    if (angle > 90 && angle < 181) return -lut[180 - angle];
    return lut[angle];
}

#if defined(__AVR__)
vertex fetchVertexFromProgmem(uint16_t i) {
    vertex v;
    memcpy_P(&v, &mesh[i], sizeof(vertex));
    return v;
}
#endif
